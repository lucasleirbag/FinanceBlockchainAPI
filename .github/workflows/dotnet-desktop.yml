name: .NET Core CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        configuration: [Debug, Release]

    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration ${{ matrix.configuration }} --no-restore --verbosity normal

    - name: Execute unit tests
      run: dotnet test --configuration ${{ matrix.configuration }} --no-build --verbosity normal --results-directory TestResults --logger "trx;LogFileName=test_results.trx"
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: Test Results
        path: TestResults

    - name: Check code formatting
      run: dotnet format --check

    - name: Install .NET tools
      run: dotnet tool install --global dotnet-reportgenerator-globaltool
      env:
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

    - name: Generate code coverage report
      run: |
        dotnet test --collect:"XPlat Code Coverage"
        reportgenerator -reports:**/coverage.cobertura.xml -targetdir:coveragereport
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Upload code coverage report
      uses: actions/upload-artifact@v3
      with:
        name: Code Coverage Report
        path: coveragereport

    - name: Build artifacts
      run: dotnet publish --configuration ${{ matrix.configuration }} --output publish

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Build Artifacts
        path: publish
